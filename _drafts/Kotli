Why I chose Kotlin

When chipping away on the backend side I've most of the time been on the JVM. Doing mostly Java with bits of Groovy and Scala on the side. Groovy and Scala have been my initial attempts to escape *something* from Java language, something I haven't really been able to put my finger on. Maybe it has been the codebases I've been exposed to, mostly Springy stack with a mishmash of imperative and object oriented code, sometimes trickled with massive amounts of accidental complexity due to liberal use of GOF design patterns, mostly due to sake of pattern usage.

The need to find an alternative JVM language has been increasing over the last several years also due to advancements in the frontend community. I have been doing React development for the last 3-ish years and when I initially made the jump to ES6 the uneasy feeling when developing on the backend was ever more apparent. This lead to explorations to outside the realm of JVM, mostly trying to figure out Haskell. Fun language and taught me loads about declarative style of programming and type theory. Something was still missing though. I believe a big reason for that was IntelliJ and the familiar all encompassing nature of the IDE, being the best tool on every single place I've developed in. I do√ü have to admit, I might have a bit of a crush to JetBrains. They seem to know what they are doing.